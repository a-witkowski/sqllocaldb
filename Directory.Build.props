<Project>
  <PropertyGroup>
    <AnalyzersVersion>2.9.8</AnalyzersVersion>
  </PropertyGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json" />
    <Compile Include="$(MSBuildThisFileDirectory)CommonAssemblyInfo.cs" />
    <PackageReference Include="coverlet.msbuild" Version="2.8.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="$(AnalyzersVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="$(AnalyzersVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.NetCore.Analyzers" Version="$(AnalyzersVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="ReportGenerator" Version="4.5.4" PrivateAssets="All" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" PrivateAssets="All" />
  </ItemGroup>
  <PropertyGroup>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)SqlLocalDb.snk</AssemblyOriginatorKeyFile>
    <Authors>martin_costello</Authors>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)SqlLocalDb.ruleset</CodeAnalysisRuleSet>
    <Company>https://github.com/martincostello/sqllocaldb</Company>
    <ContinuousIntegrationBuild Condition=" '$(CI)' != '' or '$(GITHUB_ACTIONS)' != '' ">true</ContinuousIntegrationBuild>
    <Copyright>Martin Costello (c) 2012-$([System.DateTime]::Now.ToString(yyyy))</Copyright>
    <!-- Enable deterministic builds for CI once https://github.com/tonerdo/coverlet/issues/363 fixed -->
    <Deterministic>false</Deterministic>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <GenerateGitMetadata Condition=" ('$(CI)' != '' or '$(GITHUB_ACTIONS)' != '') and '$(GenerateGitMetadata)' == '' ">true</GenerateGitMetadata>
    <LangVersion>latest</LangVersion>
    <NeutralLanguage>en-US</NeutralLanguage>
    <NoWarn>$(NoWarn);CA1054;CA2234</NoWarn>
    <NoWarn Condition=" '$(GenerateDocumentationFile)' != 'true' ">$(NoWarn);SA0001</NoWarn>
    <Nullable>enable</Nullable>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/martincostello/sqllocaldb</PackageProjectUrl>
    <PackageReleaseNotes>See $(PackageProjectUrl)/releases for details.</PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageTags>sql;localdb</PackageTags>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>$(PackageProjectUrl).git</RepositoryUrl>
    <SignAssembly>true</SignAssembly>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <VersionPrefix>3.0.1</VersionPrefix>
    <VersionSuffix Condition=" '$(VersionSuffix)' == '' AND '$(GITHUB_ACTIONS)' != '' ">beta$([System.Convert]::ToInt32(`$(GITHUB_RUN_NUMBER)`).ToString(`0000`))</VersionSuffix>
    <VersionPrefix Condition=" $(GITHUB_REF.StartsWith(`refs/tags/v`)) ">$(GITHUB_REF.Replace('refs/tags/v', ''))</VersionPrefix>
    <VersionSuffix Condition=" $(GITHUB_REF.StartsWith(`refs/tags/v`)) "></VersionSuffix>
    <FileVersion Condition=" '$(GITHUB_RUN_NUMBER)' != '' ">$(VersionPrefix).$(GITHUB_RUN_NUMBER)</FileVersion>
  </PropertyGroup>
  <PropertyGroup>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutput>$(OutputPath)\</CoverletOutput>
    <CoverletOutputFormat>cobertura,json</CoverletOutputFormat>
    <Exclude>[Humanizer*]*,[System.*]*,[*.Test*]*,[TodoApp*]*,[xunit.*]*</Exclude>
    <ExcludeByAttribute>System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>
    <MergeWith>$(CoverletOutput)coverage.$(TargetFramework).json</MergeWith>
    <Threshold Condition=" '$(OS)' == 'Windows_NT' ">80</Threshold>
    <Threshold Condition=" '$(OS)' != 'Windows_NT' ">40</Threshold>
  </PropertyGroup>
</Project>
